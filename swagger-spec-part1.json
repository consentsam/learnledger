{
    "openapi": "3.0.0",
    "info": {
        "title": "ProjectLedger API",
        "description": "API documentation for the ProjectLedger platform. This API enables interaction with projects, users, submissions, and other resources in the ProjectLedger ecosystem.",
        "version": "1.0.0",
        "contact": {
            "name": "ProjectLedger Support",
            "email": "support@projectledger.com"
        }
    },
    "servers": [
        {
            "url": "https://projectledger.vercel.app/api",
            "description": "Production server"
        },
        {
            "url": "http://localhost:3000/api",
            "description": "Local development server"
        }
    ],
    "tags": [
        {
            "name": "Register",
            "description": "User registration operations"
        },
        {
            "name": "User Profile",
            "description": "User profile management operations"
        },
        {
            "name": "Projects",
            "description": "Project management operations"
        },
        {
            "name": "Project Status",
            "description": "Project status update operations"
        },
        {
            "name": "Project Assignment",
            "description": "Project assignment operations"
        },
        {
            "name": "Submissions",
            "description": "Project submission operations"
        },
        {
            "name": "Company",
            "description": "Company-related operations"
        },
        {
            "name": "Freelancer",
            "description": "Freelancer-related operations"
        },
        {
            "name": "GitHub",
            "description": "GitHub integration operations"
        }
    ],
    "components": {
        "schemas": {
            "Error": {
                "type": "object",
                "properties": {
                    "isSuccess": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Error message"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": {
                            "fieldName": [
                                "Error message for this field"
                            ]
                        }
                    }
                }
            },
            "SuccessResponse": {
                "type": "object",
                "properties": {
                    "isSuccess": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true
                    }
                }
            },
            "WalletAddress": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "example": "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
            }
        },
        "parameters": {
            "walletAddressParam": {
                "name": "walletAddress",
                "in": "query",
                "description": "Ethereum wallet address",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/WalletAddress"
                }
            },
            "projectIdParam": {
                "name": "projectId",
                "in": "path",
                "description": "ID of the project",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "companyIdParam": {
                "name": "companyId",
                "in": "path",
                "description": "ID of the company",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "freelancerIdParam": {
                "name": "freelancerId",
                "in": "path",
                "description": "ID of the freelancer",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "submissionIdParam": {
                "name": "submissionId",
                "in": "query",
                "description": "ID of the submission",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "responses": {
            "BadRequest": {
                "description": "Bad Request - Invalid input data",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "isSuccess": false,
                            "message": "Invalid input data",
                            "errors": {
                                "fieldName": [
                                    "Field is required"
                                ]
                            }
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized - Authentication required",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "isSuccess": false,
                            "message": "Authentication required"
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Forbidden - Insufficient permissions",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "isSuccess": false,
                            "message": "Insufficient permissions to perform this action"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not Found - Resource not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "isSuccess": false,
                            "message": "Resource not found"
                        }
                    }
                }
            },
            "ServerError": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "isSuccess": false,
                            "message": "Internal server error"
                        }
                    }
                }
            }
        }
    }
}