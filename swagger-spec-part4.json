{
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user profile (either company or freelancer)",
                "operationId": "registerUser",
                "requestBody": {
                    "$ref": "#/components/requestBodies/RegisterUser"
                },
                "responses": {
                    "200": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserProfile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "409": {
                        "description": "Conflict - User already registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "isSuccess": false,
                                    "message": "User already registered with this wallet address"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },
        "/userProfile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get user profile",
                "description": "Retrieves user profile information (for either company or freelancer)",
                "operationId": "getUserProfile",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/walletAddressParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/components/schemas/Company"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/Freelancer"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            },
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update user profile",
                "description": "Updates user profile information",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateUserProfile"
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/components/schemas/Company"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/Freelancer"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "List projects",
                "description": "Returns a list of projects, with optional filtering",
                "operationId": "listProjects",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by project status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "open",
                                "in-progress",
                                "closed"
                            ]
                        }
                    },
                    {
                        "name": "skill",
                        "in": "query",
                        "description": "Filter by required skill",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "minPrize",
                        "in": "query",
                        "description": "Minimum prize amount",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "maxPrize",
                        "in": "query",
                        "description": "Maximum prize amount",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "Filter by project owner wallet address",
                        "schema": {
                            "$ref": "#/components/schemas/WalletAddress"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort field",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created",
                                "prize",
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit number of results (default 20, max 100)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 20
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Pagination offset",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create project",
                "description": "Creates a new project",
                "operationId": "createProject",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateProject"
                },
                "responses": {
                    "200": {
                        "description": "Project created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Project created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Project"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        },
        "/projects/{projectId}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get project details",
                "description": "Retrieves detailed information about a specific project",
                "operationId": "getProjectDetails",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/projectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/Project"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "companyId": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "companyName": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            },
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update project",
                "description": "Updates a specific project",
                "operationId": "updateProject",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/projectIdParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateProject"
                },
                "responses": {
                    "200": {
                        "description": "Project updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Project updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Project"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete project",
                "description": "Deletes a specific project",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/projectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isSuccess": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Project deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                }
            }
        }
    }
}